name: Deploy

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/workflows/install_zola

      - name: Build the webpage
        run: zola build

      - name: Upload as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: webpage
          path: public/*

  # There is an action called `reviewdog/action-stylelint`. However, it requires `package.json` even if a project is not managed by npm.
  # That is why I install and run stylelint manually.
  check_css:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get the npm cache directory
        id: npm-cache-dir
        run: echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-stylelint

      - name: Install stylelint
        run: npm install stylelint postcss-sass --location=global

      - name: Run stylelint
        run: stylelint sass/**/*

  check_translations:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache
          key: mdbook-transcheck

      - name: Install mdbook-transcheck
        run: cargo install mdbook-transcheck

      - name: Check if translations are up-to-date.
        run: scripts/check_translations.py

  check_zola:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/workflows/install_zola

      - name: Check source files
        run: zola check

  run_test_scripts:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run test scripts
        run: find content/blog/* -type d -exec bash -c 'cd "$0" && ./test_script.sh' {} \;

  deploy:
    runs-on: ubuntu-latest

    needs: [build, check_css, check_translations, check_zola, run_test_scripts]

    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2

      - name: Set the committer information
        run: |
          git config --global user.name 'Hiroki Tokunaga'
          git config --global user.email 'toku-sa-n@users.noreply.github.com'

      - name: Checkout to the `gh-pages` branch
        run: |
          git pull
          git checkout gh-pages

      - name: Clean up the directory
        run: rm -rf *

      - name: Download the artifact
        uses: actions/download-artifact@v3
        with:
          name: webpage

      - name: Commit
        run: |
          git add .
          git diff-index --quiet HEAD || git commit -m 'Deploy the website'

      - name: Push
        run: git push
